/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package smpractica4;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RectangularShape;

/**
 *
 * @author mariorl
 */
public class Lienzo extends javax.swing.JPanel {

    private Point p_inicial = new Point(-100,-100);
    private ModoPintura modoPintura = ModoPintura.LINEA;
    private Shape forma = new Line2D.Float();
    private Color color = Color.black;
    private Boolean relleno = false;

    /**
     *
     */
    public enum ModoPintura {LINEA, RECTANGULO, ELIPSE}
    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
    }
    @Override
    public void paint (Graphics g){
        super.paint(g);
        Graphics2D g2d = (Graphics2D)g;
        if (forma != null){
            g2d.setPaint(color);
            if(relleno){
                g2d.fill(forma);
            }
            g2d.draw(forma);
        }
        
    }

    /**
     *
     * @param modoPintura
     */
    public void setModoPintura(ModoPintura modoPintura){
        this.modoPintura = modoPintura;
    }
    
    /**
     *
     * @return
     */
    public ModoPintura getModoPintura(){
        return modoPintura;
    }
    
    /**
     *
     * @param color
     */
    public void setColor(Color color){
        this.color = color;
    }
    
    /**
     *
     * @return
     */
    public Color getColor(){
        return color;
    }
    
    /**
     *
     * @param relleno
     */
    public void setRelleno(Boolean relleno){
        this.relleno = relleno;
    }
 
    /**
     *
     * @return
     */
    public Boolean isRelleno(){
        return relleno;
    }
    
    public void limpiar() {
        forma = null;
        this.repaint(); // Redibuja el lienzo vac√≠o.
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        p_inicial = new Point(evt.getPoint());
        switch(modoPintura){
            case LINEA:
                forma = new Line2D.Float(evt.getPoint(),evt.getPoint());
                break;
            case RECTANGULO:
                forma = new Rectangle2D.Float();
                break;
            case ELIPSE:
                forma = new Ellipse2D.Float();
                break;
        }
        
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if(forma instanceof Line2D)
            ((Line2D)forma).setLine(p_inicial, evt.getPoint());
        else if(forma instanceof RectangularShape)
            ((RectangularShape)forma).setFrameFromDiagonal(p_inicial, evt.getPoint());
        this.repaint();
    }//GEN-LAST:event_formMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
